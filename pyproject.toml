[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pvs-hass-mqtt"
authors = [
  { name="Kevin P. Fleming", email="kevin@km6g.us" },
]
description = "An MQTT-based integration for SunPower PVS and Home Assistant"
readme = "README.md"
license = { text="Apache-2.0" }
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
    "attrs",
    "Cerberus",
    "paho-mqtt",
    "PyYAML",
    "requests",
]

[project.optional-dependencies]
systemd = [
    "systemd-python",
]

[project.urls]
"Homepage" = "https://github.com/kpfleming/pvs-hass-mqtt"
"Bug Tracker" = "https://github.com/kpfleming/pvs-hass-mqttt/issues"

[project.scripts]
pvs-hass-mqtt = "pvs_hass_mqtt.cli:cli"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/pvs_hass_mqtt/version.py"

[tool.hatch.build.targets.sdist]
include = [
    "src",
    "tests",
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/pvs_hass_mqtt",
    "src/hass_mqtt",
]

[tool.hatch.envs.lint]
python = "3.10"
dependencies = [
    "black==22.6.0",
    "flake8==4.0.1",
    "flake8-annotations==2.9.0",
    "flake8-bugbear==22.7.1",
    "flake8-builtins==1.5.3",
    "flake8-comprehensions==3.10.0",
#    "flake8-docstrings",
    "flake8-new-union-types==0.4.1",
    "flake8-pep585==0.1.5.1",
    "flake8-pytest-style==1.6.0",
    "flake8-use-fstring==1.4",
    "isort==5.10.1",
    "mock", # needed for type-checking
    "mypy==0.971",
    "pep8-naming==0.13.1",
    "pytest", # needed for type-checking
    "pytest-mock", # needed for type-checking
    "types-mock", # needed for type-checking
    "types-PyYAML",
    "types-requests",
]

[tool.hatch.envs.lint.scripts]
lint = [
     "black .",
     "isort .",
     "flake8",
     "mypy --package pvs_hass_mqtt",
     "mypy --package hass_mqtt",
     "mypy tests",
     "shellcheck workflow-support/*.sh",
]

[tool.hatch.envs.ci]
dependencies = [
    "mock",
    "coverage[toml]",
    "pytest",
    "pytest-cov",
    "pytest-mock",
]

[[tool.hatch.envs.ci.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.ci.scripts]
ci = [
    # run tests that manipulate logging configuration
    "pytest -p 'no:logging' -m 'logging' --cov-branch --cov=pvs_hass_mqtt tests/",
    # run tests that do not manipulate logging configuration
    "pytest -m 'not logging' --cov-append  --cov-branch --cov-fail-under=90 --cov=pvs_hass_mqtt tests/",
]

[tool.hatch.envs.ci-systemd]
template = "ci"
features = [
    "systemd",
]

[[tool.hatch.envs.ci-systemd.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
namespace_packages = true
explicit_package_bases = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = "normal"
# implicit_reexport = false
no_implicit_optional = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "6.0"
mock_use_standalone_module = true
xfail_strict = true
testpaths = [
    "tests",
]
addopts = [
    "-ra",
    "--strict-markers",
]
markers = [
    "logging: marks tests that manipulate the root logger",
]
